// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test oarfish
nextflow_process {

    name "Test Process OARFISH"
    script "../main.nf"
    process "OARFISH"

    tag "modules"
    tag "modules_nfcore"
    tag "oarfish"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    // test("sarscov2 - bam") {

        // TODO nf-core: If you are created a test for a chained module
        // (the module requires running more than one process to generate the required output)
        // add the 'setup' method here.
        // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

    //     when {
    //         process {
    //             """
    //             // TODO nf-core: define inputs of the process here. Example:

    //             input[0] = [
    //                 [ id:'test'], // meta map
    //                 file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
    //             ]
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert path(process.out.json_info.get(0).get(1)).exists() },
    //             { assert path(process.out.results.get(0).get(1)).exists() },
    //             { assert snapshot(
    //                 process.out.versions,
    //                 process.out.lib_format_counts
    //             ).match() }
    //         )
    //     }

    // }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:

                input[0] = [
                    [ id:'test'], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.json_info.get(0).get(1)).exists() },
                { assert path(process.out.results.get(0).get(1)).exists() },
                { assert snapshot(
                    process.out.versions,
                    process.out.lib_format_counts
                ).match() }
            )
        }


    }

}
