/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: GFFREAD_TRANSCRIPT {
        ext.args = '-E -v -w'
    }

    withName: PICARD_FILTERSAMREADS {
        ext.prefix = { "${meta.id}.filtered" }
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.n_sorted" }
        ext.args = '-N'
    }

    withName: SAMTOOLS_FILTER {
        ext.prefix = { "${meta.id}.filtered" }
        ext.args = "-F 2308 -m 500 -s ${params.downsample_rate}" // Filter out secondary and unmapped alignments and // reads with less than 500 bases // and downsample
    }

    withName: SAMTOOLS_DOWNSAMPLE {
        ext.prefix = { "${meta.id}.downsampled.${params.downsample_rate}" }
        ext.args = "-s ${params.downsample_rate}" // Downsample rate between 0 and 1
    }

    withName: SAMTOOLS_MANIPULATION {
        ext.prefix = { "${meta.id}.mapq60" }
    }

    withName: GAWK {
        ext.args2 = '/Bambu[TG]/' // Filter for BAMBU gene and transcript entries in GTF
        ext.prefix = { "${meta.id}.bambu" }
    }

    withName: SQANTIQC {
        ext.args = '--min_ref_len 0 --skipORF'
    }

    withName: SQANTIREADS {
        ext.args = '--force_id_ignore --pca_tables'
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    }


    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TXIMETA_TXIMPORT' {
        // container = 'https://depot.galaxyproject.org/singularity/bioconductor-tximeta%3A1.24.0--r44hdfd78af_0'
        container = 'community.wave.seqera.io/library/bioconductor-tximeta_r-arrow:db41bbf13ee76181'
    }

    withName: 'BAMBU' {
        publishDir = [
            path: { "${params.outdir}/bambu" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'LIFTOFF' {
        publishDir = [
            path: { "${params.outdir}/bambu" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-infer_genes -a 0.7 -s 0.7 -copies -sc 0.7 -overlap 1.0 '
    }

    withName: 'GFFCOMPARE' {
        ext.args = '-d 10 --no-merge'
    }

}

if(params.technology == "PacBio" && !params.large_genome) {
    process {
        withName: MINIMAP2_ALIGN_TRANSCRIPT {
                publishDir = [
                path: { "${params.outdir}/minimap2_transcriptome" },
                mode: 'symlink'
            ]
        ext.args = '--eqx -N 200 -ax map-hifi' // -ax map-pb' // -ax splice-ont
        }

        withName: MINIMAP2_ALIGN_GENOME {
                publishDir = [
                path: { "${params.outdir}/minimap2_genome" },
                mode: 'symlink'
            ]
        ext.args = '-ax splice:hq -uf -N 200 --secondary=yes -G 10000 --secondary-seq' // -ax splice // -ax splice:hq -uf
        }
    }
}

if(params.technology == "PacBio" && params.large_genome) {
    process {
        withName: MINIMAP2_ALIGN_TRANSCRIPT {
                publishDir = [
                path: { "${params.outdir}/minimap2_transcriptome" },
                mode: 'symlink'
            ]
        ext.args = '--eqx -N 10 -ax map-hifi' // -ax map-pb' // -ax splice-ont
        }

        withName: MINIMAP2_ALIGN_GENOME {
                publishDir = [
                path: { "${params.outdir}/minimap2_genome" },
                mode: 'symlink'
            ]
        ext.args = '-ax splice:hq -uf -N 10 --secondary=yes -G 10000 -I 16g --secondary-seq' // -ax splice // -ax splice:hq -uf
        }

    }
}



if(params.technology == "ONT" && params.large_genome) {
    process {
        withName: MINIMAP2_ALIGN_TRANSCRIPT {
                publishDir = [
                path: { "${params.outdir}/minimap2_transcriptome" },
                mode: 'symlink'
            ]
        ext.args = '--eqx -N 200 -ax map-ont ' // -ax map-pb' // -ax splice-ont --eqx -N 100 -ax map-ont
        }

        withName: MINIMAP2_ALIGN_GENOME {
                publishDir = [
                path: { "${params.outdir}/minimap2_genome" },
                mode: 'symlink'
            ]
        ext.args = '-ax splice -N 200 --secondary=yes -G 10000 --split-prefix=tmp --secondary-seq' // -ax splice // -ax splice:hq -uf
        }
    }
}

if(params.technology == "ONT" && !params.large_genome){
    process {
        withName: MINIMAP2_ALIGN_TRANSCRIPT {
                publishDir = [
                path: { "${params.outdir}/minimap2_transcriptome" },
                mode: 'symlink'
            ]
        ext.args = '--eqx -N 200 -ax map-ont' // -ax map-pb' // -ax splice-ont --eqx -N 100 -ax map-ont
        }

        withName: MINIMAP2_ALIGN_GENOME {
                publishDir = [
                path: { "${params.outdir}/minimap2_genome" },
                mode: 'symlink'
            ]
        ext.args = '-ax splice -N 200 --secondary=yes -G 10000 --secondary-seq' // -ax splice // -ax splice:hq -uf
        }
    }
}
